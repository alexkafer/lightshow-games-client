{"version":3,"sources":["../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormControl.js","games/Manual.jsx"],"names":["warning","module","exports","InputGroup","forwardRef","_ref","ref","bsPrefix","size","className","_ref$as","as","Component","props","createElement","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","displayName","Text","Radio","type","Checkbox","Append","Prepend","propTypes","string","isRequired","elementType","Feedback","defaultProps","createContext","controlId","undefined","FormControl","classes","_classes","id","isValid","isInvalid","plaintext","readOnly","_classes2","_classes3","Manual","state","message","channel","this","context","emit","value","event","console","log","target","setState","Navbar","bg","expand","variant","Brand","ConnectionStatus","Container","Button","block","onClick","placeholder","onChange","handleText","bind","setMessage","handleChannel","setChannelOn","setChannelOff","React","contextType","SocketContext"],"mappings":"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","file":"static/js/4.d69a70e8.chunk.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function warning() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\n\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return React.createElement(InputGroupText, null, React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\nInputGroup.displayName = 'InputGroup';\nInputGroup.Text = InputGroupText;\nInputGroup.Radio = InputGroupRadio;\nInputGroup.Checkbox = InputGroupCheckbox;\nInputGroup.Append = InputGroupAppend;\nInputGroup.Prepend = InputGroupPrepend;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string.isRequired,\n  as: PropTypes.elementType\n};\nvar defaultProps = {\n  type: 'valid'\n};\nvar Feedback = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      type = _ref.type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\"]);\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type && type + \"-feedback\")\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nFeedback.defaultProps = defaultProps;\nexport default Feedback;","import React from 'react';\nvar FormContext = React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormControl = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      id = _ref.id,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"type\", \"size\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else if (type === 'file') {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix + \"-file\"] = true, _classes2);\n  } else {\n    var _classes3;\n\n    classes = (_classes3 = {}, _classes3[bsPrefix] = true, _classes3[bsPrefix + \"-\" + size] = size, _classes3);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nFormControl.Feedback = Feedback;\nexport default FormControl;","import React from 'react'\nimport SocketContext from '../services/socket-context'\n\nimport {Navbar, Button, Container, InputGroup, FormControl} from 'react-bootstrap'\nimport ConnectionStatus from '../components/ConnectionStatus'\n\nclass Manual extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            message: '',\n            channel: 0\n        }\n    }\n\n    setMessage() {\n        this.context.emit('text', this.state.message);\n    }\n\n    setChannelOn() {\n        this.context.emit('set', {\n            channel: this.state.channel,\n            value: 255\n        });\n    }\n\n    setChannelOff() {\n        this.context.emit('set', {\n            channel: this.state.channel,\n            value: 0\n        });\n    }\n\n\n    handleText(event) {\n        console.log(event.target.value);\n        this.setState({\n            message: event.target.value\n        })\n    }\n\n    handleChannel(event) {\n        console.log(event.target.value);\n        this.setState({\n            channel: event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                    <Navbar.Brand>Manual</Navbar.Brand>\n                    <ConnectionStatus />\n                </Navbar>\n            <Container>\n                <Button className=\"mb-3\" block onClick={() => this.context.emit('allOn')}>All On</Button>\n                <Button className=\"mb-3\" block onClick={() => this.context.emit('allOff')}>All Off</Button>\n\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        placeholder=\"netlight text\"\n                        onChange={this.handleText.bind(this)}\n                    />\n                    <InputGroup.Append>\n                        <Button variant=\"outline-secondary\" onClick={this.setMessage.bind(this)} >Set</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n\n                <InputGroup>\n                    <FormControl\n                        placeholder=\"channel number\"\n                        onChange={this.handleChannel.bind(this)}\n                    />\n                    <InputGroup.Append>\n                    <Button variant=\"outline-secondary\" onClick={this.setChannelOn.bind(this)}>On</Button>\n                    <Button variant=\"outline-secondary\"onClick={this.setChannelOff.bind(this)} >Off</Button>\n                    </InputGroup.Append>\n                </InputGroup>\n            </Container>\n            </>\n        );\n    } \n}\n\nManual.contextType = SocketContext;\n\nexport default Manual;"],"sourceRoot":""}