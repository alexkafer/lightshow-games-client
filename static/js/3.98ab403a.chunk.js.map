{"version":3,"sources":["services/deviceOrientation.js","settings/MotionPage.js","settings/LocationPage.js","settings/NoDeviceOrientationPage.js","settings/CalibratePage.js","games/Wand.jsx"],"names":["registerOrientationListener","orientation_event","compass_event","window","addEventListener","MotionPage","askPermission","className","Button","onClick","variant","LocationPage","state","dropped","left","innerWidth","top","innerHeight","map","React","createRef","handleTouchStart","bind","confirmPosition","newleft","newTop","this","setState","e","target","touches","length","tagName","rect","getBoundingClientRect","touch","setCoords","clientX","clientY","console","log","preventDefault","newPos","x","current","width","y","height","props","setPosition","pos","onTouchStart","ref","alt","src","position","onDrag","_onDrag","onDragEnd","_onDragEnd","style","icon","faMapPin","size","Component","NoDeviceOrientationPage","href","location","host","CalibratePage","calibrate","Wand","notSupported","motionTimeout","needsMotion","needsPosition","needsCalibration","recordOffset","offsetAlpha","offsetBeta","offsetGamma","requestOrientationPermission","handleOrientationEvent","compassNeedsCalibration","exitGame","recordCalibration","context","emit","event","alert","clearTimeout","alpha","beta","gamma","payload","compass","webkitCompassHeading","compass_accuracy","webkitCompassAccuracy","DeviceOrientationEvent","requestPermission","then","response","setNotSupported","catch","error","undefined","DeviceMotionEvent","needsMotionPermission","setTimeout","removeEventListener","userFocus","Navbar","bg","expand","Brand","ConnectionStatus","contextType","SocketContext"],"mappings":"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","file":"static/js/3.98ab403a.chunk.js","sourcesContent":["export function supported() {\n    return window.DeviceMotionEvent !== undefined;\n}\nexport function needsPermission() {\n    // Checks to see if we need to request permission. AFAIK, This is only for iOS 13+\n    return (typeof DeviceMotionEvent && typeof DeviceMotionEvent.requestPermission === 'function');\n}\n\nexport function requestPermission() {\n    return DeviceOrientationEvent.requestPermission();\n}\n\nexport function registerOrientationListener(orientation_event, compass_event) {\n    window.addEventListener(\"deviceorientation\", orientation_event, true);   \n    window.addEventListener(\"compassneedscalibration\", compass_event, true);\n}\n\nexport function removeOrientationListener(orientation_event, compass_event) {\n    window.removeEventListener(\"deviceorientation\", orientation_event, true);  \n    window.addEventListener(\"compassneedscalibration\", compass_event, true);\n}\n\n","import React from 'react'\nimport {Button} from 'react-bootstrap'\n\nconst MotionPage = ({askPermission}) => {\n  return (\n      <div className=\"container center-item\">\n       <h1 className='mt-5'>Activate Motion</h1>\n       <p className='lead'>Motion allows the light show to know where your phone is pointed.</p>\n       <Button className='m-1' onClick={askPermission} variant=\"primary\">Allow</Button>\n     </div>\n  )\n}\n\nexport default MotionPage;","import React, { Component } from 'react'\nimport {Button} from 'react-bootstrap'\n\nimport { Draggable } from 'react-touch';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin } from '@fortawesome/free-solid-svg-icons';\n\nclass LocationPage extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      dropped: false,\n      left: window.innerWidth / 2,\n      top: window.innerHeight / 4,\n    }\n\n    this.map = React.createRef();\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.confirmPosition = this.confirmPosition.bind(this);\n  }\n\n  setCoords(newleft, newTop) {\n    this.setState({\n      left: newleft,\n      top: newTop\n    })\n  }\n\n  handleTouchStart(e) {\n    if (e.target && e.touches.length === 1 && e.target.tagName === \"IMG\") {\n      var rect = e.target.getBoundingClientRect();\n      const touch = e.touches[0];\n      this.setCoords(touch.clientX - rect.left, touch.clientY - rect.top);\n      console.log(touch);\n      e.preventDefault()\n    }\n  }\n\n\n  _onDrag(newPos) {\n    console.log(newPos);\n    this.setCoords(newPos.left, newPos.top)\n  }\n\n  _onDragEnd() {\n    console.log(\"Finished dragging\");\n  }\n\n  confirmPosition() {\n    const x = 2 * this.state.left / this.map.current.width - 1;\n    const y = -(2 * this.state.top / this.map.current.height - 1);\n    console.log(x, y);\n    this.props.setPosition(x, y);\n  }\n\n  render() {\n    let pos = {\n      left: this.state.left,\n      top: this.state.top,\n    }\n\n    console.log(pos);\n\n    return (\n      <div className=\"center-item\">\n         <h1>Set your location</h1>\n          <div onTouchStart={this.handleTouchStart} className=\"location-pin\">\n\n          <img ref={this.map} alt=\"Light Show Map\" src=\"https://lightshow.centralus.cloudapp.azure.com/layout/map\"  />\n\n            <Draggable \n              position={pos}\n              onDrag={newPos => this._onDrag(newPos)}\n              onDragEnd={() => this._onDragEnd()}>\n              <FontAwesomeIcon className=\"pin\" style={pos} icon={faMapPin} size=\"3x\" />\n            </Draggable>\n          </div>\n         \n         <Button onClick={this.confirmPosition} className='m-1' variant=\"primary\">Confirm</Button>\n       </div>\n    )\n  }\n}\n\nexport default LocationPage","import React from 'react'\nimport {Button} from 'react-bootstrap'\n\nconst NoDeviceOrientationPage = () => {\n  return (\n    <div className=\"container center-item\">\n        <h1 className='mt-5'>Not Supported</h1>\n        <p className='lead'>Unfortunately, this game doesn't work on this device.</p>\n        <Button className='m-1' href={\"googlechromes://\" + window.location.host} variant=\"primary\">Try in Chrome</Button>\n        <Button className='m-1' href=\"itms-apps://itunes.apple.com/us/app/chrome/id535886823\" variant=\"secondary\">Install Chrome</Button>\n        <p className='pt-5 lead'>iOS 12: Please enable device orientation in Settings > Safari > Motion & Orientation Access.</p>\n      </div>\n  )\n}\n\nexport default NoDeviceOrientationPage;","import React from 'react'\nimport {Button} from 'react-bootstrap'\n\nconst CalibratePage = ({calibrate}) => {\n  return (\n    <div className=\"container center-item\">\n     <h1 className='mt-5'>Calibrate Direction</h1>\n     <p className='lead'>Point your phone south and press Calibrate.</p>\n     <Button className='m-1' onClick={calibrate} variant=\"primary\">Calibrate</Button>\n   </div>\n)\n}\n\nexport default CalibratePage;","import React, {Component} from 'react'\nimport { Navbar, Button } from 'react-bootstrap'\nimport SocketContext from '../services/socket-context'\nimport {supported, needsPermission, requestPermission, registerOrientationListener, removeOrientationListener} from '../services/deviceOrientation'\n\nimport MotionPage from '../settings/MotionPage'\nimport LocationPage from '../settings/LocationPage'\nimport NoDeviceOrientationPage from '../settings/NoDeviceOrientationPage'\nimport ConnectionStatus from '../components/ConnectionStatus'\nimport CalibratePage from '../settings/CalibratePage'\n\nclass Wand extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            notSupported: false,\n            motionTimeout: 0,\n            needsMotion: false,\n            needsPosition: true,\n            needsCalibration: true,\n            recordOffset: false,\n            offsetAlpha: 0,\n            offsetBeta: 0,\n            offsetGamma: 0,\n        }\n        \n        // this.handleMotionEvent = this.handleMotionEvent.bind(this);\n        this.requestOrientationPermission = this.requestOrientationPermission.bind(this);\n        this.handleOrientationEvent = this.handleOrientationEvent.bind(this);\n        this.compassNeedsCalibration = this.compassNeedsCalibration.bind(this);\n        this.setPosition = this.setPosition.bind(this);\n        this.exitGame = this.exitGame.bind(this);\n        this.recordCalibration = this.recordCalibration.bind(this);\n    }\n\n    setNotSupported() {\n        this.setState({notSupported: true})\n        this.context.emit('end');\n    }\n\n    compassNeedsCalibration(event) {\n        alert('Your compass needs calibrating! Wave your device in a figure-eight motion.');\n        event.preventDefault();\n    }\n\n    recordCalibration() {\n        this.setState({\n            needsCalibration: false,\n            recordOffset: true\n        });\n    }\n\n    setPosition(x, y) {\n        this.context.emit('position', {x, y});\n        this.setState({needsPosition: false});\n    }\n\n    handleOrientationEvent(event) {\n        if (this.state.motionTimeout !== 0) {\n            clearTimeout(this.state.motionTimeout);\n        }\n\n        if (this.state.recordOffset) {\n            this.setState({\n                recordOffset: false,\n                offsetAlpha: event.alpha,\n                offsetBeta: event.beta,\n                offsetGamma: event.gamma\n            })\n        } \n\n        var payload = {\n            alpha: event.alpha - this.state.offsetAlpha,\n            beta: event.beta  - this.state.offsetBeta,\n            gamma: event.gamma - this.state.offsetGamma,\n            compass: event.webkitCompassHeading,\n            compass_accuracy: event.webkitCompassAccuracy\n        };\n\n        this.context.emit('odometry', payload);\n    }\n\n    requestOrientationPermission() {\n        console.log(\"Requesting permission.\");\n        requestPermission().then(response => {\n            console.log(response);\n            if (response === 'granted') {\n                registerOrientationListener(this.handleOrientationEvent, this.compassNeedsCalibration);\n                this.setState({needsMotion: false})\n            } else if (response === 'denied') {\n                this.setNotSupported();\n            }\n        }).catch(console.error)\n    }\n\n    exitGame() {\n        console.log(\"Exiting\");\n        this.context.emit('end');\n    }\n    \n    // handleMotionEvent(event) {\n    //     var payload = {\n    //         x: event.accelerationIncludingGravity.x,\n    //         y: event.accelerationIncludingGravity.y,\n    //         z: event.accelerationIncludingGravity.z\n    //     };\n\n    //     this.props.logDeviceMotion(payload);\n    // }\n\n    \n\n    componentDidMount () {\n        if (supported()) {\n            const needsMotionPermission = needsPermission();\n            this.setState({needsMotion: needsMotionPermission})\n            \n            if (!needsMotionPermission) {\n                registerOrientationListener(this.handleOrientationEvent, this.compassNeedsCalibration);\n\n                // Set a timer, if we don't hear anything (canceling the timeout), assume it isn't supported\n                this.setState({\n                    motionTimeout: setTimeout(() => {\n                        this.setNotSupported();\n                    }, 1000)\n                });\n            }\n\n            // Could use device motion for dead recking\n            // window.addEventListener(\"devicemotion\", this.handleMotionEvent, true);\n        } else {\n            this.setNotSupported();\n        }\n    }\n\n    componentWillUnmount () {\n        removeOrientationListener(this.handleOrientationEvent, this.compassNeedsCalibration);\n        // window.removeEventListener(\"devicemotion\", this.handleMotionEvent, true);\n    }\n\n    render() {\n\n        let userFocus = (<div className=\"wand\">\n                <p>Now playing.</p>\n                <Button onClick={() => this.setState({needsCalibration: true})}>Calibrate</Button>\n            </div>);\n\n        if (this.state.notSupported) {\n            userFocus = <NoDeviceOrientationPage />\n        } else if (this.state.needsMotion) {\n            userFocus = <MotionPage askPermission={this.requestOrientationPermission}/>\n        } else if (this.state.needsPosition) {\n            userFocus = <LocationPage setPosition={this.setPosition}/>\n        } else if (this.state.needsCalibration) {\n            userFocus = <CalibratePage calibrate={this.recordCalibration}/>\n        }\n\n        return (\n            <>\n                <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n                    <Navbar.Brand>Wand</Navbar.Brand>\n                    <ConnectionStatus />\n                </Navbar>\n                {userFocus}\n            </>\n        );\n    } \n}\n\nWand.contextType = SocketContext;\n\nexport default Wand;"],"sourceRoot":""}