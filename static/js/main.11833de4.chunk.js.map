{"version":3,"sources":["games lazy /^/.//.*$/ groupOptions: {} namespace object","redux/reducers/gyro.js","redux/reducers/game.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","redux/selectors.js","components/ViewGame.js","components/Dashboard.js","App.js","redux/actions.js","serviceWorker.js","index.js","services/socket-context.js","components/ApprovalButton.js","components/ConnectionStatus.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","initialState","alpha","NaN","beta","gamma","compass","compass_accuracy","x","y","z","inGame","currentGame","placeInLine","combineReducers","gyro","state","action","type","payload","game","createStore","rootReducer","composeWithDevTools","getGame","store","ViewGame","props","draw","bind","this","window","addEventListener","removeEventListener","Trianglify","height","innerHeight","width","innerWidth","x_colors","canvas","refs","className","ref","src","process","alt","React","Component","Dashboard","joinGame","cancelGame","console","log","context","emit","button","instructions","connected","Button","onClick","variant","size","block","disabled","ConnectionStatus","Container","contextType","SocketContext","connect","socket","openSocket","App","loadGame","updateQueue","startGame","on","place","error","ApprovalButton","title","description","callback","pastDelay","CurrentAction","Loadable","loader","loading","Loading","Provider","value","role","dispatch","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","createContext","buttonComponent","override","status","updateConnection","attempt","repeat","setState"],"mappings":"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","file":"static/js/main.11833de4.chunk.js","sourcesContent":["var map = {\n\t\"./Manual\": [\n\t\t59,\n\t\t0\n\t],\n\t\"./Manual.jsx\": [\n\t\t59,\n\t\t0\n\t],\n\t\"./Pong\": [\n\t\t60,\n\t\t1\n\t],\n\t\"./Pong.jsx\": [\n\t\t60,\n\t\t1\n\t],\n\t\"./Wand\": [\n\t\t61,\n\t\t2\n\t],\n\t\"./Wand.jsx\": [\n\t\t61,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 120;\nmodule.exports = webpackAsyncContext;","import { DEVICE_MOTION, DEVICE_ORIENTATION } from \"../actionTypes\";\n\nconst initialState = {\n    alpha: NaN,\n    beta: NaN,\n    gamma: NaN,\n    compass: NaN,\n    compass_accuracy: NaN,\n    x: NaN,\n    y: NaN,\n    z: NaN\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case DEVICE_MOTION: {\n            const { x, y, z} = action.payload;\n            return {\n                ...state,\n                x: x,\n                y: y,\n                z: z\n            }\n        }\n        case DEVICE_ORIENTATION: {\n            const { alpha, beta, gamma, compass, compass_accuracy} = action.payload;\n            return {\n                ...state,\n                alpha: alpha,\n                beta: beta,\n                gamma: gamma,\n                compass: compass,\n                compass_accuracy: compass_accuracy\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n","import { START_GAME, END_GAME, LOAD_GAME, QUEUE_UPDATE } from \"../actionTypes\";\n\nconst initialState = {\n    inGame: false,\n    currentGame: '',\n    placeInLine: -1\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case START_GAME: {\n            return {\n                ...state,\n                inGame: true\n            }\n        }\n        case END_GAME: {\n            return {\n                ...state,\n                inGame: false\n            }\n        }\n        case LOAD_GAME: {\n            return {\n                ...state,\n                currentGame: action.payload.game,\n            }\n        }\n        case QUEUE_UPDATE: {\n            return {\n                ...state,\n                placeInLine: action.payload.placeInLine\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n","import { combineReducers } from \"redux\";\nimport gyro from \"./gyro\";\nimport game from \"./game\";\n\nexport default combineReducers({gyro, game});","export const DEVICE_MOTION = \"DEVICE_MOTION\";\nexport const DEVICE_ORIENTATION = \"DEVICE_ORIENTATION\";\n\nexport const START_GAME = \"START_GAME\";\nexport const END_GAME = \"END_GAME\";\nexport const LOAD_GAME = \"LOAD_GAME\";\nexport const QUEUE_UPDATE = \"QUEUE_UPDATE\";\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default createStore(rootReducer, composeWithDevTools());\n","\nexport const getOrientation = store => ({ \n        alpha: store.gyro.alpha, \n        beta: store.gyro.beta, \n        gamma: store.gyro.gamma,\n        compass: store.gyro.compass,\n        compass_accuracy: store.gyro.compass_accuracy,\n        x: store.gyro.x, \n        y: store.gyro.y, \n        z: store.gyro.z \n});\n\nexport const getGame = store => ({\n        currentGame: store.game.currentGame,\n        inGame: store.game.inGame,\n        placeInLine: store.game.placeInLine\n})\n\n","import React from 'react'\nimport Trianglify from 'trianglify'\n\nclass ViewGame extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n    }\n\n    componentDidMount() {\n        this.draw();\n        window.addEventListener('resize', this.draw);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.draw);\n      }\n    \n    draw() {\n        const pattern = Trianglify({\n            height: window.innerHeight / 4,\n            width: window.innerWidth,\n            x_colors: [\"#73b2d7\",\"#72b1d7\",\"#70b0d6\",\"#6fafd6\",\"#6daed5\",\"#6caed5\",\"#6badd5\",\"#69acd4\",\"#68abd4\",\"#66aad3\",\"#65a9d3\",\"#63a8d2\",\"#62a7d2\",\"#61a7d1\",\"#5fa6d1\",\"#5ea5d0\",\"#5da4d0\",\"#5ba3d0\",\"#5aa2cf\",\"#59a1cf\",\"#57a0ce\",\"#569fce\",\"#559ecd\",\"#549ecd\",\"#529dcc\",\"#519ccc\",\"#509bcb\",\"#4f9acb\",\"#4d99ca\",\"#4c98ca\",\"#4b97c9\",\"#4a96c9\",\"#4895c8\",\"#4794c8\",\"#4693c7\",\"#4592c7\",\"#4492c6\",\"#4391c6\",\"#4190c5\",\"#408fc4\",\"#3f8ec4\",\"#3e8dc3\",\"#3d8cc3\",\"#3c8bc2\",\"#3b8ac2\",\"#3a89c1\",\"#3988c1\",\"#3787c0\",\"#3686c0\",\"#3585bf\",\"#3484bf\",\"#3383be\",\"#3282bd\",\"#3181bd\",\"#3080bc\",\"#2f7fbc\",\"#2e7ebb\",\"#2d7dbb\",\"#2c7cba\",\"#2b7bb9\",\"#2a7ab9\",\"#2979b8\",\"#2878b8\",\"#2777b7\",\"#2676b6\",\"#2574b6\",\"#2473b5\",\"#2372b4\",\"#2371b4\",\"#2270b3\",\"#216fb3\",\"#206eb2\",\"#1f6db1\",\"#1e6cb0\",\"#1d6bb0\",\"#1c6aaf\",\"#1c69ae\",\"#1b68ae\",\"#1a67ad\",\"#1966ac\",\"#1865ab\",\"#1864aa\",\"#1763aa\",\"#1662a9\",\"#1561a8\",\"#1560a7\",\"#145fa6\",\"#135ea5\",\"#135da4\",\"#125ca4\",\"#115ba3\",\"#115aa2\",\"#1059a1\",\"#1058a0\",\"#0f579f\",\"#0e569e\",\"#0e559d\",\"#0e549c\",\"#0d539a\",\"#0d5299\",\"#0c5198\",\"#0c5097\",\"#0b4f96\",\"#0b4e95\",\"#0b4d93\",\"#0b4c92\",\"#0a4b91\",\"#0a4a90\",\"#0a498e\",\"#0a488d\",\"#09478c\",\"#09468a\",\"#094589\",\"#094487\",\"#094386\",\"#094285\",\"#094183\",\"#084082\",\"#083e80\",\"#083d7f\",\"#083c7d\",\"#083b7c\",\"#083a7a\",\"#083979\",\"#083877\",\"#083776\",\"#083674\",\"#083573\",\"#083471\",\"#083370\",\"#08326e\",\"#08316d\",\"#08306b\"],\n        });\n\n        pattern.canvas(this.refs.canvas);\n    }\n\n    render () {\n        const game = this.props.game || 'none';\n        return (\n            <div className=\"view-game\">\n                <canvas ref=\"canvas\" />\n                <div className=\"game-icon-position\">\n                    <img className=\"game-icon rounded-circle\" src={process.env.PUBLIC_URL + '/icons/' + game + '.svg'} alt={game + \" icon\"} />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default ViewGame;","\nimport React, {Component} from 'react'\n\nimport SocketContext from '../services/socket-context'\nimport ConnectionStatus from './ConnectionStatus'\nimport ViewGame from './ViewGame'\n\nimport { connect } from \"react-redux\"\nimport { getGame } from \"../redux/selectors\"\n\nimport { Container, Button } from 'react-bootstrap'\n\n// import wandIcon from '../../public/icons/wand'\n// import pongIcon from '../../public/icons/pong'\n// import noneIcon from '../../public/icons/logo'\n\nclass Dashboard extends Component {\n\n    constructor() {\n        super();\n\n        // This binding is necessary to make `this` work in the callback\n        this.joinGame = this.joinGame.bind(this);\n        this.cancelGame = this.cancelGame.bind(this);\n    }\n\n    joinGame() {\n        console.log(\"Joining game\");\n        this.context.emit(\"join\");\n    }\n\n    cancelGame() {\n        console.log(\"Cancelling Join\");\n        this.context.emit(\"cancel\");\n    }\n\n    render() {\n        var button;\n\n        if (!this.context.connected) {\n            button = (<Button \n                variant=\"secondary\" \n                size=\"lg\" \n                disabled\n                block>Disconnected</Button>\n            )\n        } else {\n            if (this.props.placeInLine === -1) {\n                button = (<Button \n                        onClick={this.joinGame} \n                        variant=\"primary\" \n                        size=\"lg\" \n                        block>Join</Button>\n                    )\n            } else {\n                button = (<Button \n                    onClick={this.cancelGame} \n                    variant=\"secondary\" \n                    size=\"lg\" \n                    block>Cancel</Button>\n                )\n            }\n        }\n       \n                    \n\n        var instructions;\n        if (this.props.placeInLine === -1) {\n            instructions =  \"Press play to join!\";\n        } else if (this.props.placeInLine === 1) {\n            instructions =  \"You're next in line!\";\n        } else if (this.props.placeInLine === 2) {\n            instructions =  \"There is one person ahead of you.\";\n        } else {\n            instructions =  \"There are \" + (this.props.placeInLine-1) + \" people ahead of you.\";\n        }\n\n        if (!this.props.currentGame) {\n            if (this.context.connected) {\n                instructions =  \"The light show is not currently playing a game. Please check back later! \";\n            } else {\n                instructions =  \"The light show is currently disconnected. Please refresh and try again. \";\n            }\n           \n        }\n\n        return (<>\n            <div className=\"large-header\">\n                <ConnectionStatus />\n                <ViewGame game={this.props.currentGame} />\n            </div>\n            <div className=\"dashboard-body\">\n                <Container>\n                    <h1>{this.props.currentGame || (this.context.connected ? \"None\" : \"No connection\")}</h1>\n                    <div className=\"queue p-5\">\n                        <p>\n                            {instructions}\n                        </p>\n                        {button}\n                        </div>\n                    \n                </Container>\n            </div>\n        </>);\n    }\n}\n\nDashboard.contextType = SocketContext;\n\nconst mapStateToProps = state => {\n    return getGame(state);\n}\n\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { getGame } from \"./redux/selectors\";\nimport { updateQueue, loadGame, startGame } from \"./redux/actions\";\n\nimport Dashboard from './components/Dashboard';\nimport Loadable from 'react-loadable';\nimport ApprovalButton from './components/ApprovalButton';\n\nimport SocketContext from './services/socket-context';\nimport openSocket from 'socket.io-client';\n\nimport './App.scss'\n\nconst socket = openSocket('http://localhost:2567');\n\nclass App extends React.Component {\n  constructor({loadGame, updateQueue, startGame}) {\n    super();\n\n    socket.on('game', (game) => {\n      console.log(\"Game:\", game);\n      loadGame(game)\n    });\n\n    socket.on('queue', (place) => {\n      console.log(\"Queue:\", place);\n      updateQueue(place)\n    });\n\n    socket.on('started', () => {\n      console.log(\"Starting game!\");\n      startGame()\n    });\n  }\n\n  Loading (props) {\n    if (props.error) {\n      return <ApprovalButton title=\"Error!\" description={\"Unable to load \" + this.props.currentGame + \". \"} button=\"Retry\" callback=\"props.retry\"/>;\n      } else if (props.pastDelay) {\n      return <ApprovalButton title=\"Loading\" description={\"Loading\" + this.props.currentGame + \". Please wait.\"}/>;\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    var CurrentAction;\n\n    if (this.props.inGame) {\n      CurrentAction = Loadable({\n        loader: () => import('./games/' + this.props.currentGame),\n        loading: this.Loading\n      });\n    } else {\n      CurrentAction = Dashboard;\n    } \n  \n    return (\n      <SocketContext.Provider value={socket}>\n        <main role='main'>\n          <CurrentAction />\n        </main>\n      </SocketContext.Provider>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return getGame(state);\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // dispatching plain actions\n    loadGame: (game) => dispatch(loadGame(game)),\n    updateQueue: (place) => dispatch(updateQueue(place)),\n    startGame: () => dispatch(startGame()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { DEVICE_MOTION, DEVICE_ORIENTATION, START_GAME, END_GAME, LOAD_GAME, QUEUE_UPDATE } from './actionTypes'\n\nexport const logDeviceMotion = content => ({\n    type: DEVICE_MOTION,\n    payload: {\n        x: content.x,\n        y: content.y,\n        z: content.z,\n    }\n})\n\nexport const logDeviceOrientation = content => ({\n    type: DEVICE_ORIENTATION,\n    payload: {\n        alpha: content.alpha | NaN,\n        beta: content.beta | NaN,\n        gamma: content.gamma | NaN,\n        compass: content.compass | NaN,\n        compass_accuracy: content.compass_accuracy | NaN,\n    }\n})\n\nexport const startGame = () => ({\n    type: START_GAME\n})\n\nexport const endGame = () => ({\n    type: END_GAME\n})\n\nexport const loadGame = (newGame) => ({\n    type: LOAD_GAME,\n    payload: {\n        game: newGame || null\n    }\n})\n\nexport const updateQueue = (newPlace) => ({\n    type: QUEUE_UPDATE,\n    payload: {\n        placeInLine: newPlace || -1\n    }\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nconst SocketContext = React.createContext();\n\nexport default SocketContext;","import React from 'react'\n\nimport {Button} from 'react-bootstrap'\n\nconst ApprovalButton = ({title, description, button, callback, override}) => {\n  var buttonComponent = <></>;\n  if (button) {\n    buttonComponent = <Button onClick={callback} variant=\"primary\">{button}</Button>;\n  }\n  return (\n    <div className=\"container center-item\">\n        <h1 className='mt-5'>{title}</h1>\n        <p className='lead'>{description}</p>\n        {buttonComponent}\n      </div>\n  )\n}\n\nexport default ApprovalButton","import React, {Component} from 'react'\n\nimport SocketContext from '../services/socket-context'\n\nclass ConnectionStatus extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {status: \"Disconnected\", connected: false};\n  }\n\n  componentDidMount() {\n    console.log(this.context)\n    this.context.on('connect', () => this.updateConnection(\"Connected\", true));\n    this.context.on('connect_timeout', () => this.updateConnection(\"Timed out\", false));\n    this.context.on('reconnect', () => this.updateConnection(\"Reconnected\", true));\n    this.context.on('reconnecting', (attempt) => this.updateConnection(\"Reconnecting\" + '.'.repeat(attempt), false));\n    \n    this.context.on('reconnect_failed', () => this.updateConnection(\"Unable to reconnect\", false));\n    this.context.on('disconnect', () => this.updateConnection(\"Disconnected\", false));\n\n    this.context.on('connect_error', (error) => {\n      if (error.type === \"TransportError\") {\n        console.log(\"Can't connect to server\");\n      } else {\n        console.error(error);\n      }\n    });\n  }\n\n  updateConnection(status, connected) {\n    // Handle your bootstrap data package to set up the component.\n    this.setState({status, connected});\n  }\n\n  render() {\n    return (\n      <div className=\"header-connection d-flex align-items-center\">\n        <span className=\"p-1 pr-2\">{this.state.status}</span> <span className={\"dot \" + (this.state.connected ? \"green\" : \"red\")}></span>\n      </div>\n    );\n  }\n}\n\nConnectionStatus.contextType = SocketContext;\n\nexport default ConnectionStatus"],"sourceRoot":""}